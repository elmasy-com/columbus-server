openapi: 3.0.3
info:
  title: Columbus Server API
  description: |
    Columbus Server API sepcification.

    Besides lookup, every endpoint needs an API key. Because Columbus Server is in alpha stage, API keys are manually distributed.
    Any endpoint, that requires API key include a basic blacklisting algorithm which blocks Client's IP for X second.
    Missing API key is not results a block, but invalid API key is.

    There are 2 type of user:
      - **user**: allowed to insert domain and manage its own settings.
      - **admin**: anything in **user**, plus allow to add/manage other users.
  contact:
    email: mail@danielgorbe.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: https://columbus.elmasy.com
tags:
  - name: domain
    description: Lookup/Insert domain.
  - name: user
    description: User operations.
  - name: admin
    description: Admin operations.
  - name: info
    description: Server informations.

paths:
  /lookup/{domain}:
    get:
      tags:
        - domain
      summary: Lookup subdomains for domain.
      description: |
        Returns a list of subdomains.

        By default, returns a list of subdomains only, the domain not included (eg.: `["one", "two", ...]`).
        
        Use the `full` query parameter to return the full hostname (eg.: `["one.example.com", "two.example.com", ...]`).

        If `Accept` header is set to `text/plain`, this endpoint returns a newline delimetered text of the list (eg.: `one\ntwo\nthree`).
      parameters:
        - name: domain
          in: path
          description: Domain to get the subdomains.
          required: true
          schema:
            type: string
        - name: full
          in: query
          description: Returns a list of full hostnames.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArray'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '400':
          description: |
            Invalid parameters.
            
            Can be an invalid domain or invalid value for `full`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '403':
          description: Client IP is blocked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Domain not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
  /insert/{domain}:
    put:
      tags:
        - domain
      summary: Insert domain.
      description: |
        Insert domain to the database.
        If the domain is exist, silently ignores it.
      parameters:
        - name: domain
          in: path
          description: domain to insert
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
        '400':
          description: Invalid domain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '401':
          description: X-Api-Key is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '403':
          description: Client IP is blocked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
      security:
        - x-api-key: []
  
  /user:
    get:
      tags:
        - user
      summary: Get user info
      description: |
        Get user info based on `X-Api-Key` header.
        
        Admins can impersonate other users by set the `X-Api-Key` to the other's key.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: "`X-Api-Key` is missing or invalid."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Client IP is blocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
      security:
        - x-api-key: []
    put:
      tags:
        - admin
      summary: Add user
      description: Add user. Only admin can do this!
      parameters:
        - name: name
          in: query
          required: true
          description: New user's name
          schema:
            type: string
        - name: admin
          in: query
          required: false
          description: Set admin value to <value>. If omitted, set to false.
          schema:
            type: boolean
      responses:
        '201':
          description: The user created.
          content:
            apllication/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "`X-Api-Key` is missing or invalid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Blocked or user not admin.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Name taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
      security:
        - x-api-key: []
    delete:
      tags:
        - user
      summary: Delete user
      description: |
        Delete user based on `X-Api-Key` header.
        
        Admins can impersonate other users by set the `X-Api-Key` to the other's key.
      parameters:
        - name: confirmation
          in: query
          description: Confirm the delete
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '401':
          description: "`X-Api-Key` is missing or invalid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request. See error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Client IP is blocked
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
      security:
      - x-api-key: []
    patch:
      tags:
        - user
      summary: Change self user settings.
      description: |
        User can update its own setting. User is selected based on `X-Api-Key`.
        
        User can update one setting at a time (`name` *or* `key`), but not both. Do two request to change both.
      parameters:
        - name: key
          description: Set this parameter to `true` to get a new key
          in: query
          required: false
          schema:
            type: boolean
        - name: name
          description: |
            Set this paramater to change the name to the value.
            
            It is possible that the desired name is taken.
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request. See the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "`X-Api-Key` is missing or invalid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Target user not exist
        '403':
          description: Client IP is blocked
        '409':
          description: Desired name is taken
          
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
      security:
        - x-api-key: []
  /user/other:
    patch:
      tags:
        - admin
      summary: Update other user settings"
      description: |
        Admin can update other user's settings.
        
        User can update one setting at a time.
      parameters:
        - name: username
          description: Naem of the user to configure
          in: query
          required: true
          schema:
            type: string
        - name: key
          description: Set this parameter to `true` to get a new key
          in: query
          required: false
          schema:
            type: boolean
        - name: name
          description: Set this paramater to update the name to the value
          in: query
          required: false
          schema:
            type: string
        - name: admin
          description: |
            Set this to `true` if you want to update the given user to admin.
            Set to `false` if you want to remove the given user from admin.
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request. See the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "`X-Api-Key` is missing or invalid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Client IP is blocked
        '404':
          description: Target user not exist
        '409':
          description: Name is taken.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
      security:
        - x-api-key: []
  
  /users:
    get:
      tags:
        - admin
      summary: Get every user
      description: Get a list of every user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '401':
          description: "`X-Api-Key` is missing or invalid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The user is not admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Bad Gateway. Upstream failed.
        '504':
          description: Gateway Timeout. Upstream response takes too long.
  
  /stat:
    get:
      tags:
        - info
      summary: Basic domain statistic
      description: |
        Basic domain statistic that holds the total number of domains and
        the total number of subdomains across domains.
        
        The `date` field is in Unix time format.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stat'
        '204':
          description: The background process is started recently and currently cant give useful information. Try again later.
        '403':
          description: Blocked IP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        


components:

  schemas:
    StringArray:
      type: array
      items:
        type: string
    String:
      type: string
    Error:
      type: object
      properties:
        error:
          type: string
    User:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        admin:
          type: boolean
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    Stat:
      type: object
      properties:
        date:
          type: integer
          description: Time is in Unix time format
        domain:
          type: integer
          description: Total number of domains
        sub:
          type: integer
          description: Total nombure of subdomains across domains.

  securitySchemes:
    x-api-key:
      type: apiKey
      name: X-Api-Key
      in: header